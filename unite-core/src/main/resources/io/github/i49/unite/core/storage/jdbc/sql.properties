# 
# Copyright 2017 the original author or authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

COUNT_JOBS=SELECT COUNT(1) FROM job
COUNT_JOBS_BY_STATUS=SELECT COUNT(1) FROM job WHERE job_status = ?
COUNT_WORKFLOWS=SELECT COUNT(1) FROM workflow

DELETE_JOB_LINKS=DELETE FROM job_link
DELETE_JOBS=DELETE FROM job
DELETE_TASKS=DELETE FROM task
DELETE_WORKFLOWS=DELETE FROM workflow

FIND_FIRST_JOB_BY_STATUS=SELECT * FROM job WHERE job_status = ? ORDER BY job_id LIMIT 1
FIND_JOB_BY_ID=SELECT * FROM job WHERE job_id = ?
FIND_JOB_STATUS_BY_ID=SELECT job_status FROM job WHERE job_id = ?
FIND_JOBS_BY_STATUS=SELECT * FROM job WHERE job_status = ? ORDER BY job_id
FIND_LINKS_BY_TARGET=SELECT j.*, l.mapper_class, l.mapper_object FROM job_link l \
    INNER JOIN job j ON j.job_id = l.source_job_id WHERE target_job_id = ?
FIND_NEXT_JOBS=SELECT target_job_id FROM job_link WHERE source_job_id = ?
FIND_TASK=SELECT * FROM task WHERE job_id = ? ORDER BY sequence_number
FIND_WORKFLOW_BY_ID=SELECT * FROM workflow WHERE workflow_id = ?

INSERT_JOB=INSERT INTO job (job_name, job_status, job_input, workflow_id) VALUES(?, ?, ?, ?)
INSERT_JOB_LINK=INSERT INTO job_link (source_job_id, target_job_id, mapper_class, mapper_object) VALUES(?, ?, ?, ?)
INSERT_TASK=INSERT INTO task (job_id, sequence_number, class_name, parameters) VALUES(?, ?, ?, ?)
INSERT_WORKFLOW=INSERT INTO workflow (workflow_name, workflow_status) VALUES(?, ?)

UPDATE_JOB=UPDATE job SET job_status = ?, job_output = ?, standard_output = ? WHERE job_id = ?
UPDATE_JOB_STATUS=UPDATE job SET job_status = ? WHERE job_id = ?
UPDATE_JOB_STATUS_IF_READY=\
    UPDATE job j SET job_status = 'READY' \
    WHERE job_id = ? AND NOT EXISTS (\
    SELECT 1 FROM job_link l \
    INNER JOIN job s ON s.job_id = l.source_job_id AND s.job_status <> 'COMPLETED' \
    WHERE l.target_job_id = j.job_id)
